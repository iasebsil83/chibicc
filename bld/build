#!/bin/bash



# -------- DECLARATIONS --------

#exit on error
set -e

#current execution directory
CXD=$(dirname $(realpath $0))
pCXD=$(dirname $CXD)

#input/output
SRC=$pCXD/src
TMP=$pCXD/out/tmp
APP=$pCXD/out/app

#get into main project directory
cd $pCXD






# -------- TOOLS --------

#mkdir_ifnotexist <<<<<<<<<<<<<<<<<<<<< should be an STDZ function
function mkdir_ifnotexist() {
	for a in $@; do
		if [[ ! -d $a ]]; then
			mkdir $a
		fi
	done
}






# -------- EXECUTION --------

#clean previous generation
$CXD/clean
if [[ -f $APP/chibicc ]]; then
	rm $APP/chibicc
fi
mkdir_ifnotexist $pCXD/out $TMP $APP

#compile using external CC
echo "Compiling an instance using external CC..."
rm --recursive --force        $TMP/chibicc_ext
git clone -b external_cc .git $TMP/chibicc_ext
cd                            $TMP/chibicc_ext
bld/install
cd $pCXD

#dependencies compilation
echo "Compiling dependencies using the freshly generated instance..."
for n in strings tokenize hashmap type main parse codegen preprocess unicode; do
	$TMP/chibicc_ext/app/chibicc -o $TMP/$n.o $SRC/$n.c
done

#main program compilation
echo "Compiling final executable using the freshly generated instance..."
cc -std=c11 -g -fno-common -Wall -Wno-switch -o $APP/chibicc \
	$TMP/strings.o $TMP/tokenize.o   $TMP/hashmap.o \
	$TMP/type.o    $TMP/main.o       $TMP/parse.o   \
	$TMP/codegen.o $TMP/preprocess.o $TMP/unicode.o
echo "Compilation done."
